@page "/displaypotions"
@using Weapon_Armory.Data

<PageTitle>Display All Potions</PageTitle>
<div class="outlineText">
    <p>Display All Potions</p>

    @if (potions == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Number</th>
                    <th>Rarity</th>
                    <th>Name</th>
                    <th>Picture</th>
                </tr>
            </thead>
            <tbody>
                @for (int forecast = 1; forecast <= potions.Count(); forecast++)
                {
                    <tr>
                        <td>@forecast</td>
                        <td>@potions[forecast - 1].Rarity</td>
                        <td>@potions[forecast - 1].PotionType</td>
                        <td><img src="@potions[forecast - 1].Picture" alt="Potion Image" /></td> 
                    </tr>
                }
            </tbody>
        </table>
    }
</div>
@code {
    private List<WeatherForecastService>? potions;

    protected override async Task OnInitializedAsync()
    {
        var client = new HttpClient();

        potions = new List<WeatherForecastService>();
        HttpResponseMessage response = await client.GetAsync("http://127.0.0.1:5000/api/potions");
        string json = await response.Content.ReadAsStringAsync();
        potions = Newtonsoft.Json.JsonConvert.DeserializeObject<List<WeatherForecastService>>(json);
        var options = new JsonSerializerOptions() { PropertyNameCaseInsensitive = true };
    }
}